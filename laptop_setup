#!/bin/bash

install_brew() {
    if [ -f /usr/local/bin/brew ]
    then
        echo "Homebrew is installed"
        echo "Cleaning up..."
        brew cleanup
        echo "Updating..."
        brew update || brew update
        echo "Running Doctor..."
        brew doctor
        echo "Upgrading..."
        brew upgrade
    else
        echo "Installing Homebrew"
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi
}

brew_install() {
    echo "Installing preferred packages..."
    brew bundle --file=- <<-EOS
        brew "coreutils"
        brew "git"
        brew "git-quick-stats"
        brew "gnupg"
        brew "htop"
        brew "imagemagick"
        brew "nmap"
        brew "openssl"
        brew "redis"
        brew "shellcheck"
        brew "speedtest-cli"
        brew "the_platinum_searcher"
        brew "tree"
        brew "vim"
        brew "zlib"
        brew "zsh"
        brew "zsh-syntax-highlighting"
        cask "iterm2"
        cask "docker"
        cask "slack"
        cask "spotify"
        tap "sambadevi/powerlevel9k"
        brew "powerlevel9k"
        tap "homebrew/cask-fonts"
        cask "font-hack-nerd-font"
EOS
}

install_rvm() {
    echo "Installing RVM..."

    echo "Looking for GPG keys; this may be slow..."
    gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
    echo rvm_auto_reload_flag=1 >> ~/.rvmrc
    \curl -sSL https://get.rvm.io | bash -s stable

    if [ -z "${LDFLAGS}" ]
    then
        echo 'export LDFLAGS=-L/usr/local/opt/openssl/lib' >> ~/.zshrc
    fi

    if [ -z "${CPPFLAGS}" ]
    then
        echo 'export CPPFLAGS=-I/usr/local/opt/openssl/include' >> ~/.zshrc
    fi

    if [ -z "${PKG_CONFIG_PATH}" ]
    then
        echo 'export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig"' >> ~/.zshrc
    fi

    latest=$(rvm list known | grep '\[ruby-\]' | tr -d '[' | tr -d ']' | tail -1)
    echo "Latest Ruby is '${latest}'"

    rvm list strings | grep $latest >> /dev/null
    if [ $? -eq 0 ]
    then
        echo "Ruby ${latest} is already installed"
    else
        rvm install "${latest}" --with-openssl-dir=/usr/local/opt/openssl
    fi
}

install_oh_my_zsh() {
    if [[ -d ~/.oh-my-zsh ]]
    then
        echo "Oh-my-zsh! is already installed"
    else
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    fi

    grep DEFAULT_USER ~/.zshrc >> /dev/null
    if [ $? -ne 0 ]
    then
        echo "DEFAULT_USER='david.kennedy'" >> ~/.zshrc
    fi

    grep ZSH_THEME ~/.zshrc >> /dev/null
    if [ $? -ne 0 ]
    then
        echo "ZSH_THEME='powerlevel9k/powerlevel9k'" >> ~/.zshrc
    fi

    grep POWERLEVEL9K_MODE ~/.zshrc >> /dev/null
    if [ $? -ne 0 ]
    then
        echo "POWERLEVEL9K_MODE='nerdfont-complete'" >> ~/.zshrc
    fi

    grep POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS ~/.zshrc >> /dev/null
    if [ $? -ne 0 ]
    then
        echo "(status root_indicator background_jobs)" >> ~/.zshrc
    fi
}

setup_dir_colors() {
    if [ ! -f ~/.dir_colors ]
    then
        echo "LS_COLORS='no=00:fi=00:di=34:ow=34;40:ln=35:pi=30;44:so=35;44:do=35;44:bd=33;44:cd=37;44:or=05;37;41:mi=05;37;41:ex=01;31:*.cmd=01;31:*.exe=01;31:*.com=01;31:*.bat=01;31:*.reg=01;31:*.app=01;31:*.txt=32:*.org=32:*.md=32:*.mkd=32:*.h=32:*.hpp=32:*.c=32:*.C=32:*.cc=32:*.cpp=32:*.cxx=32:*.objc=32:*.cl=32:*.sh=32:*.bash=32:*.csh=32:*.zsh=32:*.el=32:*.vim=32:*.java=32:*.pl=32:*.pm=32:*.py=32:*.rb=32:*.hs=32:*.php=32:*.htm=32:*.html=32:*.shtml=32:*.erb=32:*.haml=32:*.xml=32:*.rdf=32:*.css=32:*.sass=32:*.scss=32:*.less=32:*.js=32:*.coffee=32:*.man=32:*.0=32:*.1=32:*.2=32:*.3=32:*.4=32:*.5=32:*.6=32:*.7=32:*.8=32:*.9=32:*.l=32:*.n=32:*.p=32:*.pod=32:*.tex=32:*.go=32:*.sql=32:*.csv=32:*.sv=32:*.svh=32:*.v=32:*.vh=32:*.vhd=32:*.bmp=33:*.cgm=33:*.dl=33:*.dvi=33:*.emf=33:*.eps=33:*.gif=33:*.jpeg=33:*.jpg=33:*.JPG=33:*.mng=33:*.pbm=33:*.pcx=33:*.pdf=33:*.pgm=33:*.png=33:*.PNG=33:*.ppm=33:*.pps=33:*.ppsx=33:*.ps=33:*.svg=33:*.svgz=33:*.tga=33:*.tif=33:*.tiff=33:*.xbm=33:*.xcf=33:*.xpm=33:*.xwd=33:*.xwd=33:*.yuv=33:*.aac=33:*.au=33:*.flac=33:*.m4a=33:*.mid=33:*.midi=33:*.mka=33:*.mp3=33:*.mpa=33:*.mpeg=33:*.mpg=33:*.ogg=33:*.opus=33:*.ra=33:*.wav=33:*.anx=33:*.asf=33:*.avi=33:*.axv=33:*.flc=33:*.fli=33:*.flv=33:*.gl=33:*.m2v=33:*.m4v=33:*.mkv=33:*.mov=33:*.MOV=33:*.mp4=33:*.mp4v=33:*.mpeg=33:*.mpg=33:*.nuv=33:*.ogm=33:*.ogv=33:*.ogx=33:*.qt=33:*.rm=33:*.rmvb=33:*.swf=33:*.vob=33:*.webm=33:*.wmv=33:*.doc=31:*.docx=31:*.rtf=31:*.odt=31:*.dot=31:*.dotx=31:*.ott=31:*.xls=31:*.xlsx=31:*.ods=31:*.ots=31:*.ppt=31:*.pptx=31:*.odp=31:*.otp=31:*.fla=31:*.psd=31:*.7z=1;35:*.apk=1;35:*.arj=1;35:*.bin=1;35:*.bz=1;35:*.bz2=1;35:*.cab=1;35:*.deb=1;35:*.dmg=1;35:*.gem=1;35:*.gz=1;35:*.iso=1;35:*.jar=1;35:*.msi=1;35:*.rar=1;35:*.rpm=1;35:*.tar=1;35:*.tbz=1;35:*.tbz2=1;35:*.tgz=1;35:*.tx=1;35:*.war=1;35:*.xpi=1;35:*.xz=1;35:*.z=1;35:*.Z=1;35:*.zip=1;35:*.ANSI-30-black=30:*.ANSI-01;30-brblack=01;30:*.ANSI-31-red=31:*.ANSI-01;31-brred=01;31:*.ANSI-32-green=32:*.ANSI-01;32-brgreen=01;32:*.ANSI-33-yellow=33:*.ANSI-01;33-bryellow=01;33:*.ANSI-34-blue=34:*.ANSI-01;34-brblue=01;34:*.ANSI-35-magenta=35:*.ANSI-01;35-brmagenta=01;35:*.ANSI-36-cyan=36:*.ANSI-01;36-brcyan=01;36:*.ANSI-37-white=37:*.ANSI-01;37-brwhite=01;37:*.log=01;32:*~=01;32:*#=01;32:*.bak=01;33:*.BAK=01;33:*.old=01;33:*.OLD=01;33:*.org_archive=01;33:*.off=01;33:*.OFF=01;33:*.dist=01;33:*.DIST=01;33:*.orig=01;33:*.ORIG=01;33:*.swp=01;33:*.swo=01;33:*,v=01;33:*.gpg=34:*.gpg=34:*.pgp=34:*.asc=34:*.3des=34:*.aes=34:*.enc=34:*.sqlite=34:'; export LS_COLORS" > ~/.dir_colors
    fi

    grep 'source ~/.dir_colors' ~/.zshrc >> /dev/null
    if [ $? -ne 0 ]
    then
        echo 'source ~/.dir_colors' >> ~/.zshrc
        echo "alias ls='gls --color=auto'" >> ~/.zshrc
    fi
}

if [[ "$OSTYPE" != "darwin"* ]]; then
    echo 'This is not a Mac laptop. Exiting.'
    exit 1
fi

install_brew
brew_install
install_rvm
install_oh_my_zsh
setup_dir_colors

echo "Done"
exit 0
